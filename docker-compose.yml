version: '3'
services:
  postgres:
    image: postgres:14.2-alpine
    container_name: postgres_container
    command: postgres -p 54321
    volumes:
      - ./postgres:/data/postgres
    env_file:
      - .env
    networks:
      - my-app-network

  redis:
    image: redis:7.2.1-alpine
    command: redis-server
    volumes:
      - ./redis:/data
    networks:
      - my-app-network

  sidekiq:
    depends_on:
      - postgres
      - redis
    build: ./backend
    command: bundle exec sidekiq
    volumes:
      - ./backend:/rails
      - /rails/tmp
    env_file:
      - .env
    networks:
      - my-app-network
    restart: on-failure

  backend:
    depends_on:
      - postgres
    build: ./backend
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 4000 -b '0.0.0.0'"
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/rails
      - /rails/tmp
      - /rails/db
    env_file:
      - .env
    networks:
      - my-app-network
    restart: on-failure

  frontend:
    build:
      context: ./frontend
      dockerfile: ./.docker/dev/Dockerfile
    restart: unless-stopped
    volumes:
      - "./frontend:/app"
      - "/app/node_modules"
    ports:
      - 3000:3000
    command: ["npm", "start"]
    networks:
        - my-app-network

  frontend-test:
    build:
      context: ./frontend
      dockerfile: ./.docker/dev/Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "test"]

networks:
  my-app-network:
    driver: bridge
